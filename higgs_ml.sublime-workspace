{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"std",
				"std_deviation"
			],
			[
				"sum",
				"sub_mask"
			],
			[
				"y",
				"y_pos"
			],
			[
				"x",
				"x_pos"
			],
			[
				"weight",
				"weights"
			],
			[
				"ref",
				"ref_idx"
			],
			[
				"we",
				"weights"
			],
			[
				"bina",
				"binary_mask"
			],
			[
				"gray",
				"grayscale_image"
			],
			[
				"CV_",
				"CV_RGBA2GRAY"
			],
			[
				"out",
				"outputImage"
			],
			[
				"blend",
				"blend_pyramids"
			],
			[
				"lapl",
				"lapla"
			],
			[
				"pyr",
				"pyrDown"
			],
			[
				"sma",
				"smallest_level"
			],
			[
				"la",
				"laplacian_pyramids"
			],
			[
				"ble",
				"blended_laplacian_pyr"
			],
			[
				"lap",
				"lapla"
			],
			[
				"outp",
				"output_color_channel"
			],
			[
				"war",
				"warped_grayscale"
			],
			[
				"lapla",
				"lapla_smallest_level"
			],
			[
				"belnd",
				"blended_image"
			],
			[
				"bel",
				"blended_image"
			],
			[
				"gua",
				"gauss_lapla_product"
			],
			[
				"blended",
				"blended_laplacian_pyr"
			],
			[
				"output",
				"outputImages"
			],
			[
				"siz",
				"Size"
			],
			[
				"ty",
				"type"
			],
			[
				"laplacian_p",
				"laplacian_pyramids"
			],
			[
				"guas",
				"gaussian_pyramids"
			],
			[
				"gaus",
				"gauss_lapla_product"
			],
			[
				"smal",
				"smallest_level"
			],
			[
				"pry",
				"pyrDown"
			],
			[
				"gra",
				"grayscale_image"
			],
			[
				"g",
				"guassian_pyr"
			],
			[
				"norm",
				"normalized_weights"
			],
			[
				"nora",
				"normalized_weights"
			],
			[
				"nor",
				"normalized_weights"
			],
			[
				"bg",
				"bgr_channel"
			],
			[
				"norma",
				"normalized_weights"
			],
			[
				"end",
				"endl"
			],
			[
				"fus",
				"fused_smallest_level_laplacian_channel"
			],
			[
				"down",
				"downsized_weight"
			],
			[
				"max",
				"maxPyrIndex"
			],
			[
				"prod",
				"product_decompositions"
			],
			[
				"edn",
				"endl"
			],
			[
				"wes",
				"weights"
			],
			[
				"con",
				"contrast_map"
			],
			[
				"CV",
				"CV_32F"
			],
			[
				"is",
				"imshow"
			],
			[
				"OP",
				"OpenCV_LIBS"
			],
			[
				"min",
				"min_y"
			],
			[
				"warped",
				"warped_corners"
			],
			[
				"tar",
				"tar_idx"
			],
			[
				"K",
				"K_DET_HOMOGRAPHY_THRESHOLD"
			],
			[
				"warp",
				"warped_corners"
			],
			[
				"agre",
				"aggregated_homographies"
			],
			[
				"agg",
				"aggregated_homographies"
			],
			[
				"HOMO",
				"K_DET_HOMOGRAPHY_THRESHOLD"
			],
			[
				"agr",
				"aggregated_homographies"
			],
			[
				"hom",
				"homography"
			],
			[
				"god",
				"good_matches_ref"
			],
			[
				"good",
				"good_matches_tar"
			],
			[
				"homogr",
				"homographies"
			],
			[
				"dis",
				"threshold_dist"
			],
			[
				"sz",
				"sz2"
			],
			[
				"to",
				"to_string"
			],
			[
				"match",
				"matches"
			],
			[
				"Op",
				"OpenCV_LIBS"
			],
			[
				"WID",
				"WINDOW_AUTOSIZE"
			],
			[
				"goo",
				"good_matches_ref"
			],
			[
				"aggr",
				"aggregated_descriptors"
			],
			[
				"name",
				"namedWindow"
			],
			[
				"image",
				"images_grayscale"
			],
			[
				"img",
				"img_matches"
			],
			[
				"aggre",
				"aggregated_key_points"
			],
			[
				"sk",
				"skype3D"
			],
			[
				"Get",
				"GetComponent"
			],
			[
				"Upda",
				"UpdateReadyToPassback"
			],
			[
				"I",
				"IEnumerator"
			],
			[
				"Udp",
				"UpdateReadyToPassbackState"
			],
			[
				"Star",
				"StartCoroutine"
			],
			[
				"tool",
				"toolClass"
			],
			[
				"Raz",
				"RazerHydraLeft"
			],
			[
				"Six",
				"SixDofDraggingTool"
			],
			[
				"file",
				"fileSource"
			],
			[
				"Ki",
				"KinectStreamer"
			],
			[
				"pub",
				"push_back"
			],
			[
				"back",
				"backgroundIndex"
			],
			[
				"st",
				"str"
			],
			[
				"str",
				"string"
			],
			[
				"bac",
				"backgroundIndex"
			],
			[
				"Fra",
				"FrameSaver"
			],
			[
				"saveBac",
				"saveBackgroundStreamCallback"
			],
			[
				"saveBa",
				"saveBackgroundStreamButton"
			],
			[
				"main",
				"mainMenu"
			],
			[
				"getFra",
				"getFrameSource"
			],
			[
				"dept",
				"depthFileName"
			],
			[
				"Value",
				"ValueCoder"
			],
			[
				"app",
				"append"
			],
			[
				"color",
				"colorFileName"
			],
			[
				"si",
				"size"
			],
			[
				"Fil",
				"FileSelectionDialog"
			],
			[
				"Kinec",
				"KinectViewer"
			],
			[
				"hsvC",
				"setHsvCorrectionCallback"
			],
			[
				"ma",
				"manageChild"
			],
			[
				"hsv",
				"hsvCorrectionMargin"
			],
			[
				"setNum",
				"setNumMinorWidgets"
			],
			[
				"Ho",
				"HORIZONTAL"
			],
			[
				"Gl",
				"GLMotif"
			],
			[
				"streamer",
				"streamerSettings"
			],
			[
				"input",
				"inputHsv"
			],
			[
				"Col",
				"ColorMatcher"
			],
			[
				"Co",
				"ColorMatcher"
			],
			[
				"removeC",
				"removeColorCorrectionCallback"
			],
			[
				"Kin",
				"KinectViewer"
			],
			[
				"mai",
				"mainMenu"
			],
			[
				"stremer",
				"streamerIndex"
			],
			[
				"corr",
				"correctedRedFloat"
			],
			[
				"colorCo",
				"colorCorrectionParamsBlue"
			],
			[
				"colorCor",
				"colorCorrectionParamsRed"
			],
			[
				"new",
				"newCameraPtr"
			],
			[
				"camera",
				"cameraPtr"
			],
			[
				"RAN",
				"RANSAC_DATA_SIZE"
			],
			[
				"fram",
				"frameCount"
			],
			[
				"refCO",
				"refColPtr"
			],
			[
				"refCo",
				"refColPtr"
			],
			[
				"loc",
				"lockNewValue"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/C++/C++.sublime-build",
	"command_palette":
	{
		"height": 400.0,
		"selected_items":
		[
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: In",
				"Package Control: Install Package"
			],
			[
				"Package Control: I",
				"Package Control: Install Package"
			]
		],
		"width": 475.0
	},
	"console":
	{
		"height": 54.0,
		"history":
		[
			"Package Control: Install Package",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib2,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print 'Please restart Sublime Text to finish installation'"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/MohitSridhar/NCSV/Stanford/CS229/project/higgs_gradient_boost.py",
		"/Users/MohitSridhar/NCSV/Stanford/CS229/project/higgs_ml.sublime-project",
		"/Users/MohitSridhar/.bash_profile",
		"/Users/MohitSridhar/Documents/higgs_gradient_boost.py",
		"/Users/MohitSridhar/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/MohitSridhar/.bashrc",
		"/Applications/MATLAB_R2015a.app/bin/mexopts.sh",
		"/Users/MohitSridhar/Downloads/liblinear-1.7/matlab/Makefile",
		"/Users/MohitSridhar/Downloads/liblinear-1.7/matlab/README",
		"/Users/MohitSridhar/Downloads/liblinear-1.7/matlab/make.m",
		"/Users/MohitSridhar/packages/PTAM-GPL/CMakeLists.txt",
		"/Users/MohitSridhar/NCSV/Stanford/CS231M/projects/shield_slam/.gitignore",
		"/Users/MohitSridhar/Downloads/cs231m-project-2/Artsy/jni/ar/ARApp.hpp",
		"/Users/MohitSridhar/NCSV/Stanford/CS231M/projects/project1/hdr/Panorama.cpp",
		"/Users/MohitSridhar/NCSV/Stanford/CS231M/projects/project1/hdr/Ptr<FeatureDetector> detector;.cpp",
		"/Users/MohitSridhar/NVPACK/eclipse/Eclipse.app/Contents/Resources/Eclipse.icns",
		"/Users/MohitSridhar/My Files/sublime_text/enlightened/index.html",
		"/Users/MohitSridhar/Desktop/NUS/SEM5/CG3207/Lab3B+3C Upload/asm/fibonacci_led_switch.asm",
		"/Users/MohitSridhar/Desktop/NUS/SEM5/CG3207/Lab3B+3C Upload/asm/all_function.asm",
		"/Users/MohitSridhar/Desktop/NUS/SEM5/CG3207/Lab3B+3C Upload/all_function.asm",
		"/Users/MohitSridhar/Downloads/test",
		"/Users/MohitSridhar/Downloads/Lab3B/MIPS.vhd",
		"/Users/MohitSridhar/Vrui-3.1/etc/Kinect-2.8/Scripts/server_test.sh",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/Camera.h",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/MeshBuffer.h",
		"/Users/MohitSridhar/Desktop/Challenge/test/test",
		"/Users/MohitSridhar/Vrui-3.1/etc/Kinect-2.8/KinectServer.cfg",
		"/Users/MohitSridhar/src/Kinect-2.8/KinectServer.h",
		"/Users/MohitSridhar/src/Kinect-2.8/RawKinectViewer.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/FrameSource.h",
		"/Users/MohitSridhar/src/Kinect-2.8/SpaceCarver.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/KinectServer.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/RansacTool.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/Vislets/KinectViewer.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/KinectViewer.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/ColorFrameReader.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/ColorFrameReader.h",
		"/Users/MohitSridhar/src/Kinect-2.8/LWOWriter.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/ShaderProjector.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/Projector.h",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/Camera.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/FrameSource.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/FileFrameSource.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/CalibrationCheckTool.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/KinectViewer.h",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/MultiplexedFrameSource.h",
		"/Users/MohitSridhar/src/Kinect-2.8/GridTool.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/TestAlignment.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/FunctionCalls.h",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/FrameWriter.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/MultiplexedFrameSource.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/KinectUtil.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/FindBlobs.icpp",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/Projector.cpp",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/ShaderProjector.h",
		"/Users/MohitSridhar/src/Kinect-2.8/bin/KinectPoints-A00364A02447113A.csv",
		"/Users/MohitSridhar/src/Kinect-2.8/bin/KinectPoints-A00364A01488107A.csv",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/FrameBuffer.h",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/FrameReader.h",
		"/Users/MohitSridhar/src/Kinect-2.8/Kinect/FileFrameSource.h",
		"/Users/MohitSridhar/Vrui-3.1/include/GLMotif/StyleSheet.h",
		"/Users/MohitSridhar/src/Kinect-2.8/NewCalibrateCameras.cpp",
		"/Users/MohitSridhar/src/omicron/data/oinputserver.cfg",
		"/Users/MohitSridhar/Vrui-3.1/etc/HeadTracking.cfg",
		"/Users/MohitSridhar/omicron/src/omicron/omicron/OpenNIService.cpp",
		"/Users/MohitSridhar/src/CollaborationInfrastructure-2.6/makefile",
		"/Users/MohitSridhar/Vrui-3.1/etc/VRDevices.cfg",
		"/Users/MohitSridhar/Vrui-3.1/etc/Vrui.cfg",
		"/Users/MohitSridhar/src/CollaborationInfrastructure-2.6/Collaboration/SpeexEncoder.h",
		"/Users/MohitSridhar/src/CollaborationInfrastructure-2.6/Collaboration/SpeexEncoder.cpp",
		"/Users/MohitSridhar/src/Vrui-3.1-001/VRDeviceDaemon/VRDevices/KinectHeadTracker.cpp",
		"/Users/MohitSridhar/omicron/data/oinputserver.cfg",
		"/Users/MohitSridhar/omicron/src/apps/oinputserver/oinputserver.cpp",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/include/oculus_ps3_teleop_plugin.h",
		"/Users/MohitSridhar/catkin_ws/src/youbot_gazebo_hospital/launch/hospital_youbot.launch",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/scripts/DylibSoftlinks.sh",
		"/Users/MohitSridhar/catkin_ws/src/youbot_gazebo_hospital/plugins/flip_door_plugin.cc",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/launch/hospital_youbot.launch",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/plugins/oculus_ps3_teleop_plugin.cc",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/launch/oculus_hospital_navigator.launch",
		"/Users/MohitSridhar/catkin_ws/unstable_pkgs.rosinstall",
		"/Users/MohitSridhar/ros_pkgs/devel/setup.sh",
		"/Users/MohitSridhar/ros_pkgs/devel/setup.bash",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/plugins/oculus_keyboard_teleop_plugin.cc",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/controllers/oculus_keyboard_teleop.cpp",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/CMakeLists.txt",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/launch/oculus_navigator.launch",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/launch/empty_world.launch",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/plugins/ps3_teleop_plugin.h",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/plugins/ps3_teleop_plugin.cc",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/plugins/oculus_plugin.cc",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/models/sun.sdf",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/worlds/empty.world",
		"/Users/MohitSridhar/catkin_ws/src/youbot_gazebo_hospital/launch/hospital.launch",
		"/Users/MohitSridhar/catkin_ws/src/youbot_gazebo_hospital/launch/empty_world.launch",
		"/Users/MohitSridhar/catkin_ws/src/youbot_ros_tools/youbot_description/urdf/youbot.urdf.xacro",
		"/Users/MohitSridhar/catkin_ws/src/youbot_gazebo_hospital/package.xml",
		"/Users/MohitSridhar/catkin_ws/src/hope_technik_sesto/package.xml",
		"/Users/MohitSridhar/catkin_ws/src/youbot_ros_tools/youbot_teleop/scripts/youbot_teleop.py",
		"/Users/MohitSridhar/catkin_ws/src/youbot_gazebo_hospital/controllers/elevator_controller.cpp",
		"/Users/MohitSridhar/catkin_ws/src/youbot_ros_tools/youbot_description/gazebo/gazebo.urdf.xacro",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/plugins/ps3_teleop_sesto_listener_plugin.cc",
		"/Users/MohitSridhar/catkin_ws/src/youbot_gazebo_hospital/plugins/elevator_plugin.cc",
		"/Users/MohitSridhar/catkin_ws/src/youbot_gazebo_hospital/controllers/door_controller.cpp",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/models/camera_ps3_teleop.sdf",
		"/Users/MohitSridhar/catkin_ws/src/youbot_gazebo_hospital/models/hospital_walls.sdf",
		"/Users/MohitSridhar/catkin_ws/src/gazebo_oculus/models/camera.sdf",
		"/Users/MohitSridhar/catkin_ws/src/youbot_ros_tools/youbot_gazebo/launch/youbot.launch",
		"/Users/MohitSridhar/catkin_ws/src/youbot_gazebo_hospital/plugins/elevator_door_plugin.cc",
		"/Users/MohitSridhar/catkin_ws/src/youbot_ros_tools/youbot_description/CMakeLists.txt",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/models/camera.sdf",
		"/Users/MohitSridhar/catkin_ws/src/oculus_gazebo_navigator/package.xml",
		"/Users/MohitSridhar/.gazebo/models/sun/model.sdf",
		"/Users/MohitSridhar/Desktop/HopeTecknik/youbot_ros_tools/youbot_gazebo/worlds/empty.world",
		"/Users/MohitSridhar/ros_catkin_ws/src/gazebo_ros_pkgs/gazebo_ros/launch/empty_world.launch",
		"/Users/MohitSridhar/catkin_ws/src/gazebo_oculus/launch/hospital_oculus.launch",
		"/Users/MohitSridhar/catkin_ws/src/gazebo_oculus/plugins/camera_plugin.cc",
		"/Users/MohitSridhar/catkin_ws/src/gazebo_oculus/controllers/camera_controller.cpp",
		"/Users/MohitSridhar/Desktop/HopeTecknik/youbot-ros-pkg/youbot_common/youbot_description/package.xml",
		"/Users/MohitSridhar/catkin_ws/src/youbot_gazebo_hospital/manifest.xml",
		"/Users/MohitSridhar/catkin_ws/src/gazebo_oculus/manifest.xml",
		"/Users/MohitSridhar/catkin_ws/src/youbot_gazebo_hospital/scripts/timed_roslaunch.sh",
		"/Users/MohitSridhar/Desktop/Script this.txt",
		"/Users/MohitSridhar/Desktop/HopeTecknik/gazebo_source/gazebo/gazebo/common/Plugin.hh",
		"/usr/local/share/gazebo/setup.sh",
		"/Users/MohitSridhar/ros_catkin_ws/src/geometry/tf/CMakeLists.txt",
		"/etc/sudoers",
		"/Users/MohitSridhar/ros_catkin_ws/build_isolated/catkin/CMakeFiles/CMakeOutput.log"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/MohitSridhar/Downloads/cs231m-project-2/Artsy/jni",
			"/Users/MohitSridhar/src/Kinect-2.8",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"python",
			"svm",
			"mac",
			"10.8",
			",",
			"•	",
			" ",
			".dylib",
			".lib",
			"248d",
			"main",
			"#",
			"\\",
			"cout",
			"binary_mat",
			"t>>",
			">>",
			"sum",
			"cout << ",
			"out_smallest_level",
			"IDENITY_MAT",
			"cout",
			">>",
			"/sdcard/Android/debug/project1",
			"\n				",
			"255",
			"/sdcard/Android/debug/project1",
			">>",
			"images_32f",
			">>",
			"DEBUG",
			"warped_corners_points",
			"unwarped_corners",
			"pers",
			"matches",
			"k",
			">>",
			"<<",
			"good_matches2",
			"thresholdDist",
			"tresholdDist",
			"grayscale_image",
			"rgb_image",
			"SurfFeatureDetector",
			"States.Skype3D",
			"grab",
			"Handle3DSkype",
			"grab",
			"grab\ngrab",
			"grab",
			"isTargetTrackingEnabled",
			"hasBeenGrabbed",
			"readyToPassBack",
			"isTargetTrackingEnabled",
			"VRPN",
			"ReadData1_Reg",
			"width",
			"alu",
			"debug",
			"deb",
			"debug",
			"getApply",
			"getApplyRgbCorrection",
			"getApply",
			"Kinect-2.8/Kinect/Camera.cpp",
			"getApply",
			"RHTool",
			"Hydra",
			"SixDofDraggingTool",
			"drag",
			"hydra",
			"rotateButtonMask",
			"backgroundColor",
			"RenderWindow",
			"MouseAdapter",
			"backgro",
			"frameSaver",
			"setFrameSaver",
			"done",
			"frameSaver",
			"frameSaver\\",
			"newFrame",
			"setFrameSaver",
			"size",
			"saveStream",
			"captureBackground",
			"second",
			"saveStream",
			"load",
			"path",
			"getSelectedPath",
			"saveStr",
			"saveBackground",
			"KINECTSERVER_CONFIGURATIONFILENAME",
			"Config",
			"processBox",
			"backgroundBox",
			"removeBackGround",
			"publish",
			"red",
			"remove",
			"if(camera!=0)",
			"Kinect::Camera*",
			"ransacColorCal",
			"ransac",
			"main",
			"config",
			"ConfigurationFileSection",
			"config",
			"print",
			"printf",
			"streamerIndex",
			"refRansacPointsBlue",
			"setRgb",
			"rgb",
			"source",
			"Kinect::Camera* camera=dynamic_cast<Kinect::Camera*>(source);",
			"camera",
			"colorDataCollectionThread",
			"colorDataCollectionThreadMethod",
			"colorCorrectionMethodThread",
			"colorDataCollectionThread",
			"colorDataCollectionThreadMethod",
			"wait",
			"meshVersion",
			"version",
			"meshes",
			"		MeshBuffer& newMesh=meshes.startNewValue();\nmeshes"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"decodedMesh",
			"rgb",
			"Rgb",
			"rgb",
			"transformTo3DOFPose",
			"OculusGazeboNavigator::",
			"",
			"transformTo3DOFPoseRotated",
			"",
			"youbot_gazebo_hospital",
			"botOffsetPose",
			"newBotPose",
			"updateBotVelListener",
			"updateBotVelIsolated",
			"BotIsoControl",
			"respawn=\"true\"",
			"updateToggleStates",
			"Fpv",
			"FPV",
			"updateFPSVel",
			"VERTICAL_STEP",
			"cmd_hovering_pos",
			"btnRef",
			"updateVel",
			"stabilize",
			"Stabilize",
			"rosNode",
			"OculusGazeboNavigator",
			"OGRE-Paging",
			"OGRE-PCZ",
			"OGRE-Property",
			"OGRE-RTShaderSystem",
			"1.8.2",
			"TiXmlNode::TINYXML_DECLARATION",
			"TiXmlNode::TINYXML_COMMENT",
			"TiXmlNode::TINYXML_ELEMENT",
			"TiXmlNode::TINYXML_DOCUMENT",
			"dvec2()",
			"KinectHeadTracker",
			"getTrackerStateOpenNi",
			"(1)",
			"pipe.template",
			"pipe->template write",
			"pipe->template read"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 187.0
	},
	"project": "higgs_ml.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"hd",
				"HDR.cpp"
			],
			[
				"pan",
				"Panorama.cpp"
			],
			[
				"kinec",
				"KinectViewer.cpp"
			],
			[
				"camera",
				"Kinect/Camera.h"
			],
			[
				"cam",
				"Kinect/Camera.cpp"
			],
			[
				"kinectvi",
				"KinectViewer.cpp"
			],
			[
				"framesave",
				"Kinect/FrameSaver.h"
			],
			[
				"frames",
				"Kinect/FrameSaver.cpp"
			],
			[
				"framesa",
				"Kinect/FrameSaver.cpp"
			],
			[
				"kinectview",
				"KinectViewer.h"
			],
			[
				"kinects",
				"KinectServer.h"
			],
			[
				"kinectserv",
				"KinectServerMain.cpp"
			],
			[
				"kinev",
				"KinectViewer.h"
			],
			[
				"kinectse",
				"KinectServer.h"
			],
			[
				"kinectv",
				"KinectViewer.h"
			],
			[
				"ransac",
				"Kinect/RansacTool.cpp"
			],
			[
				"mesh",
				"Kinect/MeshBuffer.h"
			],
			[
				"meshb",
				"Kinect/MeshBuffer.h"
			],
			[
				"colorfra",
				"Kinect/ColorFrameReader.h"
			],
			[
				"meshbuf",
				"Kinect/MeshBuffer.h"
			],
			[
				"lwo",
				"LWOWriter.cpp"
			],
			[
				"proje",
				"Kinect/Projector.cpp"
			],
			[
				"pro",
				"Kinect/Projector.cpp"
			],
			[
				"projec",
				"Kinect/Projector.h"
			],
			[
				"kinecvi",
				"KinectViewer.cpp"
			],
			[
				"proj",
				"Kinect/Projector.cpp"
			],
			[
				"camer",
				"Kinect/Camera.h"
			],
			[
				"sha",
				"Kinect/ShaderProjector.h"
			],
			[
				"shade",
				"Kinect/ShaderProjector.cpp"
			],
			[
				"colorfr",
				"Kinect/ColorFrameReader.h"
			],
			[
				"colorframe",
				"Kinect/ColorFrameReader.h"
			],
			[
				"rawk",
				"RawKinectViewer.cpp"
			],
			[
				"filefra",
				"Kinect/FileFrameSource.cpp"
			],
			[
				"frameso",
				"Kinect/FrameSource.h"
			],
			[
				"kinect",
				"KinectViewer.h"
			],
			[
				"frame",
				"Kinect/FrameSource.h"
			],
			[
				"framesor",
				"Kinect/FrameSource.h"
			],
			[
				"framesour",
				"Kinect/FrameSource.cpp"
			],
			[
				"calibrationc",
				"CalibrationCheckTool.cpp"
			],
			[
				"gri",
				"GridTool.cpp"
			],
			[
				"test",
				"TestAlignment.cpp"
			],
			[
				"came",
				"Kinect/Camera.cpp"
			],
			[
				"kinectui",
				"KinectUtil.cpp"
			],
			[
				"space",
				"SpaceCarver.cpp"
			],
			[
				"kinectser",
				"KinectServer.cpp"
			],
			[
				"kinectserve",
				"KinectServer.cpp"
			],
			[
				"camp",
				"Kinect/Camera.cpp"
			],
			[
				"emp",
				"worlds/empty.world"
			],
			[
				"xml",
				"package.xml"
			],
			[
				"la",
				"launch/oculus_hospital_navigator.launch"
			],
			[
				"laa",
				"launch/oculus_navigator.launch"
			],
			[
				"eleva",
				"plugins/elevator_door_plugin.cc"
			],
			[
				"hos",
				"launch/hospital.launch"
			],
			[
				"ocu",
				"gazebo/gui/OculusWindow.cc"
			],
			[
				"mem",
				"~/Desktop/NUS/SEM4/CG2271/Labs/Lab Repo/Assignment/memmang.c"
			],
			[
				"main",
				"~/Desktop/NUS/SEM4/CG2271/Labs/Lab Repo/Assignment/main.c"
			],
			[
				"",
				"~/Desktop/NUS/SEM4/CG2271/Labs/Lab Repo/Assignment/memmang.h"
			],
			[
				"make",
				"~/Desktop/NUS/SEM4/CG2271/Labs/Lab Repo/Assignment/Makefile"
			],
			[
				"me",
				"~/Desktop/NUS/SEM4/CG2271/Labs/Lab Repo/Assignment/memmang.h"
			],
			[
				"ne",
				"~/Desktop/NUS/SEM4/CG2271/Labs/Lab Repo/Assignment/memmang.h"
			],
			[
				"nen",
				"~/Desktop/NUS/SEM4/CG2271/Labs/Lab Repo/Assignment/memmang.c"
			],
			[
				"lin",
				"~/Desktop/NUS/SEM4/CG2271/Labs/Lab Repo/Assignment/linkedList.c"
			],
			[
				"nodes",
				"~/Desktop/NUS/SEM4/CG2271/Labs/Lab Repo/Assignment/nodes.c"
			],
			[
				"men",
				"~/Desktop/NUS/SEM4/CG2271/Labs/Lab Repo/Assignment/memmang.h"
			],
			[
				"ma",
				"~/Desktop/NUS/SEM4/CG2271/Labs/Lab Repo/Assignment/memmang.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 392.0
	},
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 207.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
